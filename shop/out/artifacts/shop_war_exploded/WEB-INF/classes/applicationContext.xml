<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 配置连接池 -->
    <!-- 引入外部属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置C3P0连接池: -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- Hibernate的相关信息 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">

        <!-- 注入连接池 -->
        <property name="dataSource" ref="dataSource"/>

        <!-- 配置Hibernate的其他的属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

         <!--配置Hibernate的映射文件-->
        <property name="mappingResources">
            <list>
                <value>cn/benjamin/shop/user/vo/User.hbm.xml</value>
                <value>cn/benjamin/shop/category/vo/Category.hbm.xml</value>
                <value>cn/benjamin/shop/product/vo/Product.hbm.xml</value>
                <value>cn/benjamin/shop/categorysecond/vo/CategorySecond.hbm.xml</value>
                <value>cn/benjamin/shop/order/vo/Order.hbm.xml</value>
                <value>cn/benjamin/shop/order/vo/OrderItem.hbm.xml</value>
                <value>cn/benjamin/shop/adminuser/vo/AdminUser.hbm.xml</value>
            </list>
        </property>

    </bean>

    <!-- Spring 中注册拦截器-->
    <bean id="privilegeInterceptor" class="cn.benjamin.shop.interceptor.PrivilegeInterceptor" scope="prototype">
    </bean>

    <!-- 事务管理: -->
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--Action的配置 ===========================-->

    <!-- 首页访问的Action -->
    <bean id="indexAction" class="cn.benjamin.shop.index.action.IndexAction" scope="prototype">
        <property name="categoryService" ref="categoryService"/>
        <property name="productService" ref="productService"/>
    </bean>

    <!-- 配置验证码Action -->
    <bean id="checkImgAction" class="cn.benjamin.shop.user.action.CheckImgAction" scope="prototype">

    </bean>

    <!-- 用户模块的Action -->
    <bean id="userAction" class="cn.benjamin.shop.user.action.UserAction" scope="prototype">
        <!-- 注入Service -->
        <property name="userService" ref="userService"/>
    </bean>

    <!-- 商品模块的Action -->
    <bean id="productAction" class="cn.benjamin.shop.product.action.ProductAction" scope="prototype">
        <!-- 注入Service -->
        <property name="productService" ref="productService"/>
    </bean>

    <!--购物车的Action-->
    <bean id="cartAction" class="cn.benjamin.shop.cart.action.CartAction" scope="prototype">
        <property name="productService"  ref="productService"/>
    </bean>

    <!--订单模块的Action-->
    <bean id="orderAction" class="cn.benjamin.shop.order.action.OrderAction" scope="prototype">
        <property name="orderService"  ref="orderService"/>
    </bean>

    <!--后台登陆的Action-->
    <bean id="adminUserAction" class="cn.benjamin.shop.adminuser.action.AdminUserAction" scope="prototype">
        <property name="adminUserService" ref="adminUserService"/>
    </bean>

    <!--配置后台一级分类管理的Action-->
    <bean id="adminCategoryAction" class="cn.benjamin.shop.category.adminaction.AdminCategoryAction" scope="prototype">
        <property name="categoryService" ref="categoryService"/>
    </bean>

    <!--后台二级分类管理的Action-->
    <bean id="adminCategorySecondAction" class="cn.benjamin.shop.categorysecond.adminaction.AdminCategorySecondAction" scope="prototype">
        <property name="categorySecondService" ref="categorySecondService"/>
        <property name="categoryService" ref="categoryService"/>
    </bean>

    <!--后台商品的管理的Action-->
    <bean id="adminProductAction" class="cn.benjamin.shop.product.adminaction.AdminProductAction"  scope="prototype">
        <property name="productService" ref="productService"/>
        <property name="categorySecondService" ref="categorySecondService"/>
    </bean>

    <!--后台订单的管理的Action-->
    <bean id="adminOrderAction" class="cn.benjamin.shop.order.adminaction.AdminOrderAction" scope="prototype">
        <property name="orderService" ref="orderService"/>
    </bean>

    <!--后台对前台用户管理的Action-->
    <bean id="adminBeforeUserAction" class="cn.benjamin.shop.user.adminaction.AdminBeforeUserAction" scope="prototype">
        <property name="userService" ref="userService"/>
    </bean>

    <!--后台对后台用户管理的Action-->
    <bean id="adminAfterUserAction" class="cn.benjamin.shop.user.adminaction.AdminAfterAction" scope="prototype">
        <property name="adminUserService" ref="adminUserService"/>
    </bean>


    <!-- Service的配置  ===========================-->
    <bean id="userService" class="cn.benjamin.shop.user.service.UserService">
        <property name="userDao" ref="userDao"/>
    </bean>

    <bean id="categoryService" class="cn.benjamin.shop.category.service.CategoryService">
        <property name="categoryDao" ref="categoryDao"/>
    </bean>

    <bean id="productService" class="cn.benjamin.shop.product.service.ProductService">
        <property name="productDao" ref="productDao"/>
    </bean>

    <bean id="orderService" class="cn.benjamin.shop.order.service.OrderService">
        <property name="orderDao" ref="orderDao"/>
    </bean>

    <!--后台登陆的Service-->
    <bean id="adminUserService" class="cn.benjamin.shop.adminuser.service.AdminUserService">
        <property name="adminUserDao" ref="adminUserDao"/>
    </bean>

    <!--二级分类的Service-->
    <bean id="categorySecondService" class="cn.benjamin.shop.categorysecond.service.CategorySecondService">
        <property name="categorySecondDao" ref="categorySecondDao"/>
    </bean>


    <!-- Dao的配置  ===========================-->
    <bean id="userDao" class="cn.benjamin.shop.user.dao.UserDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="categoryDao" class="cn.benjamin.shop.category.dao.CategoryDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="productDao" class="cn.benjamin.shop.product.dao.ProductDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="orderDao" class="cn.benjamin.shop.order.dao.OrderDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--后台登陆的DAO-->
    <bean id="adminUserDao" class="cn.benjamin.shop.adminuser.dao.AdminUserDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--二级分类的DAO-->
    <bean id="categorySecondDao" class="cn.benjamin.shop.categorysecond.dao.CategorySecondDao">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>



</beans>